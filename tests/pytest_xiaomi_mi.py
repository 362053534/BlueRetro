''' Tests for generic HID controller. '''
import pytest


DEVICE_NAME = '小米蓝牙手柄'
HID_DESC = bytes([
    0x05, 0x01,        # Usage Page (Generic Desktop)
    0x09, 0x05,        # Usage (Gamepad)
    0xA1, 0x01,        # Collection (Application)
    0x85, 0x04,        #   Report ID (4)
    0x15, 0x00,        #   Logical Minimum (0)
    0x25, 0x01,        #   Logical Maximum (1)
    0x35, 0x00,        #   Physical Minimum (0)
    0x45, 0x01,        #   Physical Maximum (1)
    0x75, 0x01,        #   Report Size (1)
    0x95, 0x0F,        #   Report Count (15)
    0x05, 0x09,        #   Usage Page (Button)
    0x19, 0x01,        #   Usage Minimum (0x01)
    0x29, 0x0F,        #   Usage Maximum (0x0F)
    0x81, 0x02,        #   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
    0x95, 0x01,        #   Report Count (1)
    0x81, 0x01,        #   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
    0x05, 0x01,        #   Usage Page (Generic Desktop)
    0x09, 0x07,        #   Usage (Keypad)
    0xA1, 0x00,        #   Collection (Physical)
    0x05, 0x07,        #     Usage Page (Keyboard/Keypad)
    0x75, 0x01,        #     Report Size (1)
    0x15, 0x00,        #     Logical Minimum (0)
    0x25, 0x01,        #     Logical Maximum (1)
    0x35, 0x00,        #     Physical Minimum (0)
    0x45, 0x01,        #     Physical Maximum (1)
    0x95, 0x05,        #     Report Count (5)
    0x09, 0x52,        #     Usage (Keyboard UpArrow)
    0x09, 0x51,        #     Usage (Keyboard DownArrow)
    0x09, 0x50,        #     Usage (Keyboard LeftArrow)
    0x09, 0x4F,        #     Usage (Keyboard RightArrow)
    0x09, 0xF1,        #     Usage (0xF1)
    0x81, 0x02,        #     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
    0xC0,              #   End Collection
    0x95, 0x03,        #   Report Count (3)
    0x81, 0x01,        #   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
    0x05, 0x01,        #   Usage Page (Generic Desktop)
    0x25, 0x07,        #   Logical Maximum (7)
    0x46, 0x3B, 0x01,  #   Physical Maximum (315)
    0x75, 0x04,        #   Report Size (4)
    0x95, 0x01,        #   Report Count (1)
    0x65, 0x14,        #   Unit (System: English Rotation, Length: Centimeter)
    0x09, 0x39,        #   Usage (Hat Switch)
    0x81, 0x42,        #   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,Null State)
    0x65, 0x00,        #   Unit (None)
    0x95, 0x01,        #   Report Count (1)
    0x81, 0x01,        #   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
    0x26, 0xFF, 0x00,  #   Logical Maximum (255)
    0x46, 0xFF, 0x00,  #   Physical Maximum (255)
    0x09, 0x30,        #   Usage (X)
    0x09, 0x31,        #   Usage (Y)
    0x09, 0x32,        #   Usage (Z)
    0x09, 0x35,        #   Usage (Rz)
    0x09, 0x33,        #   Usage (Rx)
    0x09, 0x34,        #   Usage (Ry)
    0x75, 0x08,        #   Report Size (8)
    0x95, 0x06,        #   Report Count (6)
    0x81, 0x02,        #   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
    0x05, 0x02,        #   Usage Page (Simulation Controls)
    0x15, 0x00,        #   Logical Minimum (0)
    0x26, 0xFF, 0x00,  #   Logical Maximum (255)
    0x09, 0xC5,        #   Usage (Brake)
    0x09, 0xBB,        #   Usage (Throttle)
    0x95, 0x02,        #   Report Count (2)
    0x75, 0x08,        #   Report Size (8)
    0x81, 0x02,        #   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
    0x05, 0x20,        #   Usage Page (Sensors)
    0x09, 0x73,        #   Usage (Motion: Accelerometer 3D)
    0xA1, 0x80,        #   Collection (Vendor Defined 0x80)
    0x05, 0x20,        #     Usage Page (Sensors)
    0x0A, 0x53, 0x04,  #     Usage (Data Field: Acceleration Axis X)
    0x16, 0x01, 0x80,  #     Logical Minimum (-32767)
    0x26, 0xFF, 0x7F,  #     Logical Maximum (32767)
    0x75, 0x10,        #     Report Size (16)
    0x95, 0x01,        #     Report Count (1)
    0x55, 0x0E,        #     Unit Exponent (-2)
    0x81, 0x03,        #     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
    0x0A, 0x54, 0x04,  #     Usage (Data Field: Acceleration Axis Y)
    0x16, 0x01, 0x80,  #     Logical Minimum (-32767)
    0x26, 0xFF, 0x7F,  #     Logical Maximum (32767)
    0x75, 0x10,        #     Report Size (16)
    0x95, 0x01,        #     Report Count (1)
    0x55, 0x0E,        #     Unit Exponent (-2)
    0x81, 0x03,        #     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
    0x0A, 0x55, 0x04,  #     Usage (Data Field: Acceleration Axis Z)
    0x16, 0x01, 0x80,  #     Logical Minimum (-32767)
    0x26, 0xFF, 0x7F,  #     Logical Maximum (32767)
    0x75, 0x10,        #     Report Size (16)
    0x95, 0x01,        #     Report Count (1)
    0x55, 0x0E,        #     Unit Exponent (-2)
    0x81, 0x03,        #     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
    0xC0,              #   End Collection
    0x05, 0x0D,        #   Usage Page (Digitizers)
    0x09, 0x3B,        #   Usage (Battery Strength)
    0x15, 0x00,        #   Logical Minimum (0)
    0x26, 0xFF, 0x00,  #   Logical Maximum (255)
    0x75, 0x08,        #   Report Size (8)
    0x95, 0x01,        #   Report Count (1)
    0x81, 0x02,        #   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
    0x05, 0x0C,        #   Usage Page (Consumer)
    0x0A, 0x23, 0x02,  #   Usage (AC Home)
    0x75, 0x01,        #   Report Size (1)
    0x15, 0x00,        #   Logical Minimum (0)
    0x25, 0x01,        #   Logical Maximum (1)
    0x35, 0x00,        #   Physical Minimum (0)
    0x45, 0x01,        #   Physical Maximum (1)
    0x95, 0x01,        #   Report Count (1)
    0x81, 0x02,        #   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
    0x95, 0x07,        #   Report Count (7)
    0x81, 0x01,        #   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
    0x85, 0x20,        #   Report ID (32)
    0x06, 0x00, 0xFF,  #   Usage Page (0xFF00)
    0x0A, 0x21, 0x26,  #   Usage (0x2621)
    0x75, 0x08,        #   Report Size (8)
    0x95, 0x06,        #   Report Count (6)
    0xB1, 0x02,        #   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
    0xC0,              # End Collection

    # 246 bytes
])


def test_hid_descriptor(blueretro):
    ''' Load a HID descriptor and check if it's parsed right. '''
    # Set device name
    rsp = blueretro.send_name(DEVICE_NAME)
    assert rsp['device_name']['device_id'] == 0
    assert rsp['device_name']['device_type'] == 0
    assert rsp['device_name']['device_subtype'] == 0

    # Validate HID descriptor
    rsp = blueretro.send_hid_desc(HID_DESC)
    assert rsp['hid_reports'][0]['report_id'] == 4
    assert rsp['hid_reports'][0]['report_tag'] == 0
    assert rsp['hid_reports'][0]['report_type'] == 2
